
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module TrabalhoFinal(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,
	input 		          		MAX10_CLK1_50,
	input 		          		MAX10_CLK2_50,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR
);



	//input wire	MAX10_CLK1_50;
	//input wire	[2:1] KEY;
	//output wire	[9:0] LEDR;

	wire	dn_debounced;
	wire	[3:0] duty_cycle;

	wire	pwm;
	wire	up_debounced;

	reg [7:0]counter1;
	reg [11:0] counter2;
	reg duty_cycle_clk;
	reg pwm_clk;

	initial begin
	counter1=8'h00;
	counter2=12'h000;
	duty_cycle_clk=1'b0;
	pwm_clk=1'b0;
	end

	always@(posedge MAX10_CLK1_50)
	begin 
			counter1<=counter1+1'b1;
					if(counter1==8'h19)
						begin  counter1<=0;
								pwm_clk<=~pwm_clk;	//pwm_clk
					end
	end	


	always@(posedge MAX10_CLK1_50)
	begin
				counter2<=counter2+1'b1;
					if(counter2==12'h1F4)
						begin  counter2<=0;
								duty_cycle_clk<=~duty_cycle_clk;	//duty_cycle_clk
					end
		end	
		

	filtro	db1(
		.noisy(KEY[1]),
		.clk(duty_cycle_clk),
		.debounced(up_debounced));

	assign	LEDR[4] =  ~pwm;
	assign	LEDR[5] =  ~pwm;
	assign	LEDR[6] =  ~pwm;
	assign	LEDR[7] =  ~pwm;
	assign	LEDR[8] =  ~pwm;
	assign	LEDR[9] =  ~pwm;

	assign	LEDR[3:0] =  ~duty_cycle;


	filtro	db2(
		.noisy(KEY[0]),
		.clk(duty_cycle_clk),
		.debounced(dn_debounced));


	duty_cycle	duty_cyc(
		.clk(duty_cycle_clk),
		.up(up_debounced),
		.dn(dn_debounced),
		.duty_cycle(duty_cycle));


	pwm_ger	pwm_g(
		.clk(pwm_clk),
		.duty_cycle(duty_cycle),
		.pwm(pwm));


	endmodule